class Ball {

    field int x, y;
    field int lengthx, lengthy;

    field int d;
    field boolean positivex;

    field int leftWall, rightWall;

    field int wall;

    constructor Ball new(int Ax, int Ay, int AleftWall, int ArightWall) {    	
	    let x = Ax;		
	    let y = Ay;
	    let leftWall = AleftWall;
	    let rightWall = ArightWall - 6;   
	    let wall = 0;
        do show();
        return this;
    }

     method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    method void show() {
        do Screen.setColor(true);
        do draw();
        return;
    }

    method void hide() {
        do Screen.setColor(false);
	    do draw();
        return;
    }

    method void draw() {
	    do Screen.drawRectangle(x, y, x + 5, y + 5);
	    return;
    }

    method int getLeft() {
        return x;
    }

    method int getRight() {
        return x + 5;
    }

    method void setDestination(int destx) {
        var int dx;
  	    let lengthx = destx - x;
        let dx = Math.abs(lengthx);

	    let positivex = (x < destx);

        let d = dx;

	    return;
    }

     method int move() {

	    do hide();

        if (positivex) {
            let x = x + 4; 
	    }
	    else {
            let x = x - 4;
	    }

	    if (~(x > leftWall)) {
	        let wall = 1;    
	        let x = leftWall;
	    }
        if (~(x < rightWall)) {
	        let wall = 2;    
	        let x = rightWall;
	    }

	    do show();

	    return wall;
    }

    method void bounce(int bouncingDirection) {
        var int newx, divLengthx, factor;

        let divLengthx = lengthx / 10;
	    if (bouncingDirection = 0) { let factor = 10; }
	    else {
	        if (((~(lengthx < 0)) & (bouncingDirection = 1)) | ((lengthx < 0) & (bouncingDirection = (-1)))) {
                let factor = 20;
            }
	        else { let factor = 5; } 
	    }

	    if (wall = 1) {
	        let newx = 506;
	    }
        else {
            let newx = 0;
        }

        do setDestination(newx);
        return;
    }

}